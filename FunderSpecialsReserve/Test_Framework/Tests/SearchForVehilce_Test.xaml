<Activity mc:Ignorable="sap sap2010" x:Class="wbTemplate" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="iWBParentPath" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>913,3079</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>wbTemplate_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="22">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="28">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.MobileAutomation</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <TryCatch sap2010:Annotation.AnnotationText="#Process Logic Layer#&#xA;Description: &#xA;&#xA;Pre Condition: &#xA;Post Condtion: " DisplayName="workblock" sap:VirtualizedContainerService.HintSize="893,2979" sap2010:WorkflowViewState.IdRef="TryCatch_1">
    <TryCatch.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="pConfig" />
      <Variable x:TypeArguments="x:String" Name="pWBPath" />
      <Variable x:TypeArguments="x:String" Name="pWBName" />
      <Variable x:TypeArguments="s:DateTime" Name="pWBStartTime" />
      <Variable x:TypeArguments="x:String" Name="pVehicleDescription" />
      <Variable x:TypeArguments="s:Random" Default="[new system.Random]" Name="pRng" />
      <Variable x:TypeArguments="x:String" Name="pColour" />
      <Variable x:TypeArguments="x:String" Name="pCapCode" />
      <Variable x:TypeArguments="x:String" Name="pTransmission" />
      <Variable x:TypeArguments="x:String" Name="pFuelType" />
    </TryCatch.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch.Try>
      <Sequence DisplayName="Try processing wbTemplate" sap:VirtualizedContainerService.HintSize="855,2665" sap2010:WorkflowViewState.IdRef="Sequence_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence sap2010:Annotation.AnnotationText="During block startup, information about the path are constructed. It will be passed to any child workblock.&#xA;You should also publish the input arguments that you want to make available in the log" DisplayName="wbStartup" sap:VirtualizedContainerService.HintSize="813,213" sap2010:WorkflowViewState.IdRef="Sequence_21">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap2010:Annotation.AnnotationText="Edit to assign a name of your choosing" DisplayName="Assign workblock its name" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="Assign_8">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[pWBName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">_wbTest_Example1</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="Create current workblock path. This will be passed to children wb, if any" DisplayName="Create workblock path" sap:VirtualizedContainerService.HintSize="334,102" sap2010:WorkflowViewState.IdRef="Assign_9">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[pWBPath]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[if (string.IsNullOrEmpty(iWBParentPath), pWBName, iWBParentPath+"|"+pWBName)]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="Assign template start time. " DisplayName="Assign start time" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="Assign_11">
            <Assign.To>
              <OutArgument x:TypeArguments="s:DateTime">[pWBStartTime]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:DateTime">[datetime.Now]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <ui:AddLogFields sap2010:Annotation.AnnotationText="Default wb fields&#xA;pWBName&#xA;wbParentName&#xA;wbKey&#xA;pWBPath&#xA;wbLevel&#xA;pWBStartTime&#xA;wbState" DisplayName="Publish default wb fields Startup" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="AddLogFields_1">
            <ui:AddLogFields.Fields>
              <InArgument x:TypeArguments="x:String" x:Key="pWBName">[pWBName]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="wbParentName">[if(pWBPath.Count(Function(x) x="|") = 0, string.Empty, pWBPath.Split("|".ToCharArray)(pWBPath.Count(Function(x) x="|")-1))]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="wbKey">[Guid.NewGuid.ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="pWBPath">[pWBPath]</InArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="wbLevel">[pWBPath.Count(Function(x) x="|")]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="wbState">Executing</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="pWBStartTime">[pWBStartTime.ToString("yyyyMMdd HH:mm:ss.fff")]</InArgument>
            </ui:AddLogFields.Fields>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddLogFields>
          <ui:AddLogFields sap2010:Annotation.AnnotationText="Publish input fields" DisplayName="Add log fields Startup" sap:VirtualizedContainerService.HintSize="334,49" sap2010:WorkflowViewState.IdRef="AddLogFields_2">
            <ui:AddLogFields.Fields>
              <scg:Dictionary x:TypeArguments="x:String, InArgument" />
            </ui:AddLogFields.Fields>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddLogFields>
          <ui:LogMessage DisplayName="Log execution started message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[pWBPath + &quot; execution started.&quot;]" />
        </Sequence>
        <Sequence sap2010:Annotation.AnnotationText="Call Process" DisplayName="Process" sap:VirtualizedContainerService.HintSize="813,2112" sap2010:WorkflowViewState.IdRef="Sequence_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap2010:Annotation.AnnotationText="Initialize required environment for execution. It is here that you should add initializing applications and reading input data that will be passed to the tested workflow." DisplayName="Prepare Input Conditions " sap:VirtualizedContainerService.HintSize="771,761" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="iConfigFile">Data\Config.xlsx</InArgument>
                <InArgument x:TypeArguments="s:String[]" x:Key="iConfigSheets">[{"Settings","Constants","Tasks","Credentials"}]</InArgument>
                <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="oConfig">[pConfig]</OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
            <Assign DisplayName="Assign - Vehicle Description" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_12">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[pVehicleDescription]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Citroen Berlingo</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign - Transmission" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_13">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[pTransmission]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Manual</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign - FuelType" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_14">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[pFuelType]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Diesel</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign - Colour" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_15">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[pColour]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Metallic - Platinum grey</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign - CapCode" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_16">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[pCapCode]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">CIBE151D1SVDTM2 4 L</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <Sequence DisplayName="Run Code" sap:VirtualizedContainerService.HintSize="771,662" sap2010:WorkflowViewState.IdRef="Sequence_18">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="729,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Arval\SearchForVehicle.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="iFuelType">[pFuelType]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="iTransmission">[pTransmission]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="iCapCode">[pCapCode]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="iColour">[pColour]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="iVehicleDescription">[pVehicleDescription]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <If Condition="[pRng.NextDouble &gt; 0.8]" DisplayName="Issue AppEx, simulated" sap:VirtualizedContainerService.HintSize="729,356" sap2010:WorkflowViewState.IdRef="If_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Throw DisplayName="Throw AppEx" Exception="[new Exception(&quot;Simulated AppEx&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
              </If.Then>
              <If.Else>
                <If Condition="[pRng.NextDouble &lt; 0.2]" DisplayName="Issue BusinessRuleException, simulated" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_4">
                  <If.Then>
                    <Throw DisplayName="Throw BRE" Exception="[new BusinessRuleException(&quot;Simulated BRE&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
                  </If.Then>
                </If>
              </If.Else>
            </If>
            <Delay DisplayName="Simulate Processing" Duration="[TimeSpan.FromSeconds(pRng.NextDouble*5)]" sap:VirtualizedContainerService.HintSize="729,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
          </Sequence>
          <Sequence sap2010:Annotation.AnnotationText="Some workflows will comprise actions who successed is judge by a lack of exception. Other workflows will output data. List the external validation rules here." DisplayName="Evaluate output" sap:VirtualizedContainerService.HintSize="771,240" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message Output" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Trace" Message="[&quot;Evaluate Output&quot;]" />
          </Sequence>
          <Sequence sap2010:Annotation.AnnotationText="Close applications." DisplayName="Prepare Output Conditions" sap:VirtualizedContainerService.HintSize="771,210" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Default="Prepare Output" Name="pComponentName" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message Prepare Output" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Trace" Message="[&quot;Starting sequence &quot; + pComponentName]" />
          </Sequence>
        </Sequence>
        <Sequence sap2010:Annotation.AnnotationText="Successful logging for workblock. &#xA;You should also publish the output arguments that you want to make available in the log." DisplayName="wb Logging Successful" sap:VirtualizedContainerService.HintSize="813,168" sap2010:WorkflowViewState.IdRef="Sequence_22">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:AddLogFields sap2010:Annotation.AnnotationText="Default wb fields&#xA;wbStatus&#xA;wbState" DisplayName="Publish default wb fields Successful" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="AddLogFields_3">
            <ui:AddLogFields.Fields>
              <InArgument x:TypeArguments="x:String" x:Key="wbStatus">Successful</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="wbState">Ended</InArgument>
              <InArgument x:TypeArguments="x:Double" x:Key="wbDurationSec">[convert.ToDouble(now.Subtract(pWBStartTime).TotalSeconds)]</InArgument>
            </ui:AddLogFields.Fields>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddLogFields>
          <ui:AddLogFields sap2010:Annotation.AnnotationText="Publish output fields" DisplayName="Add log fields Successful" sap:VirtualizedContainerService.HintSize="334,49" sap2010:WorkflowViewState.IdRef="AddLogFields_4">
            <ui:AddLogFields.Fields>
              <scg:Dictionary x:TypeArguments="x:String, InArgument" />
            </ui:AddLogFields.Fields>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddLogFields>
          <ui:LogMessage DisplayName="Log execution ended message Successful" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace" Message="[pWBPath + &quot; execution ended with success.&quot;]" />
        </Sequence>
      </Sequence>
    </TryCatch.Try>
    <TryCatch.Catches>
      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="859,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ActivityAction x:TypeArguments="s:Exception">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Catch, log and rethrow" sap:VirtualizedContainerService.HintSize="797,873" sap2010:WorkflowViewState.IdRef="Sequence_24">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence sap2010:Annotation.AnnotationText="Failed logging for workblock. &#xA;You should only set transaction status if you use a QueueItem, otherwise failed logging should remain unchanged." DisplayName="wb Logging Failed" sap:VirtualizedContainerService.HintSize="755,761" sap2010:WorkflowViewState.IdRef="Sequence_23">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:AddLogFields sap2010:Annotation.AnnotationText="Default wb fields&#xA;wbStatus&#xA;wbState&#xA;wbDurationSec&#xA;wbExceptionType&#xA;wbExceptionString" DisplayName="Publish default wb fields Failed" sap:VirtualizedContainerService.HintSize="713,124" sap2010:WorkflowViewState.IdRef="AddLogFields_5">
                <ui:AddLogFields.Fields>
                  <InArgument x:TypeArguments="x:String" x:Key="wbStatus">Failed</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="wbState">Ended</InArgument>
                  <InArgument x:TypeArguments="x:Double" x:Key="wbDurationSec">[convert.ToDouble(now.Subtract(pWBStartTime).TotalSeconds)]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="wbExceptionType">[exception.GetType.Name]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="wbExceptionMessage">[exception.Message]</InArgument>
                </ui:AddLogFields.Fields>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:AddLogFields>
              <ui:AddLogFields sap2010:Annotation.AnnotationText="Publish output fields" DisplayName="Add log fields Failed" sap:VirtualizedContainerService.HintSize="713,53" sap2010:WorkflowViewState.IdRef="AddLogFields_6">
                <ui:AddLogFields.Fields>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                </ui:AddLogFields.Fields>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:AddLogFields>
              <If Condition="[if (exception isNot Nothing ANDALSO exception.GetType.Name = &quot;BusinessRuleException&quot;, true, false)]" DisplayName="If AppEx Or BRE" sap:VirtualizedContainerService.HintSize="713,239" sap2010:WorkflowViewState.IdRef="If_6">
                <If.Then>
                  <ui:LogMessage DisplayName="Log Message BRE" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Trace" Message="[&quot;BRE&quot;]" />
                </If.Then>
                <If.Else>
                  <ui:LogMessage DisplayName="Log Message App Exception" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Trace" Message="[&quot;App Exception&quot;]" />
                </If.Else>
              </If>
              <ui:LogMessage DisplayName="Log execution ended message Failed" sap:VirtualizedContainerService.HintSize="484,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Error" Message="[pWBPath + &quot; execution ended with exception message: &quot;+exception.Message]" />
            </Sequence>
            <Rethrow DisplayName="Rethrow Exception" sap:VirtualizedContainerService.HintSize="526,22" sap2010:WorkflowViewState.IdRef="Rethrow_4" />
          </Sequence>
        </ActivityAction>
      </Catch>
    </TryCatch.Catches>
  </TryCatch>
</Activity>